name: Create PWA Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Release name'
        required: true
        default: 'PWA Release'
      release_body:
        description: 'Release description'
        required: false
        default: 'PWA build ready for distribution'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build PWA
      run: npm run build
      
    - name: Create PWA directory
      run: |
        mkdir -p pwa
        cp -r dist/* pwa/
        
    - name: Create PWA ZIP
      run: |
        cd pwa
        zip -r ../pwa.zip .
        cd ..
        ls -la pwa.zip
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body: |
          ${{ github.event.inputs.release_body }}
          
          ## PWA Build Information
          - Built on: ${{ steps.date.outputs.date }}
          - Commit SHA: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}
          
          ## Installation
          1. Download the `pwa.zip` file
          2. Extract it to your web server
          3. The PWA is ready to be served
          
        draft: false
        prerelease: false
        
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
        
    - name: Upload PWA ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pwa.zip
        asset_name: pwa.zip
        asset_content_type: application/zip